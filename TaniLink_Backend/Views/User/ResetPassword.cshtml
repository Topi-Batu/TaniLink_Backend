@model ResetPasswordViewModel;
@using TaniLink_Backend.ViewModels;
@{
    ViewData["Title"] = "Reset Password";
}

<div class="row">
    <div class="col-md-6 mx-auto">
        <div class="card">
            <div class="card-header bg-secondary text-white">
                <h5 class="text-uppercase text-center">Reset Password</h5>
            </div>
            <div class="card-body">
                <form asp-controller="User" asp-action="ResetPassword" asp-route-Token="@Model.Token" asp-route-Id="@Model.Id">
                    <div asp-validation-summary="All" class="text-danger"></div>
                    <div id="error-container" class="alert alert-danger" style="display:none;"></div>
                    <div class="form-group">
                        <label asp-for="Password"></label>
                        <input asp-for="Password" class="form-control" />
                        <span asp-validation-for="Password" class="text-danger"></span>
                    </div>
                    <div class="form-group">
                        <label asp-for="ConfirmPassword"></label>
                        <input asp-for="ConfirmPassword" class="form-control" />
                        <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                    </div>
                    <br />
                    <button type="submit" class="btn btn-primary btn-block">Reset Password</button>
                </form>
            </div>
        </div>
    </div>
</div>

<script>
    $(document).ready(function () {
        var errors = @Html.Raw(Json.Serialize(ViewData.ModelState.Values
            .SelectMany(v => v.Errors)
            .Select(e => e.ErrorMessage)));

        if (errors.length > 0) {
            var errorContainer = $("#error-container");
            errorContainer.empty();

            $.each(errors, function (index, error) {
                errorContainer.append('<p>' + error + '</p>');
            });

            errorContainer.show();
        }
    });
</script>